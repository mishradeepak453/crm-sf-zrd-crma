<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>53.0</apiVersion>
    <decisions>
        <name>Account_SE_PS_assigned</name>
        <label>Account SE PS assigned?</label>
        <locationX>974</locationX>
        <locationY>1271</locationY>
        <defaultConnector>
            <targetReference>Get_Export_Reports_PS_for_delete</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Account SE NOT assigned</defaultConnectorLabel>
        <rules>
            <name>Account_SE_assigned</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Account_Sales_Excellence_PSA</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Remove_Account_Sales_Excellence_PS</targetReference>
            </connector>
            <label>Account SE assigned</label>
        </rules>
    </decisions>
    <decisions>
        <name>Create_Chatter_Groups_PS_assigned</name>
        <label>Create Chatter Groups PS assigned?</label>
        <locationX>974</locationX>
        <locationY>755</locationY>
        <defaultConnector>
            <targetReference>Get_Account_Sales_Excellence_PS_for_delete</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Create Chatter Grousp NOT assigned</defaultConnectorLabel>
        <rules>
            <name>Create_Chatter_Groups_assigned</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Create_Chatter_Group_PSA</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Remove_Chatter_Group_PS</targetReference>
            </connector>
            <label>Create Chatter Groups assigned</label>
        </rules>
    </decisions>
    <decisions>
        <name>Export_Reports_PSA_assigned</name>
        <label>Export Reports PSA assigned?</label>
        <locationX>974</locationX>
        <locationY>1787</locationY>
        <defaultConnector>
            <targetReference>Get_Public_Group_Id</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Export Reports NOT assigned</defaultConnectorLabel>
        <rules>
            <name>Export_Reports_assigned</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Export_Reports_PSA</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Remove_Export_Reports_PS</targetReference>
            </connector>
            <label>Export Reports assigned</label>
        </rules>
    </decisions>
    <decisions>
        <description>Checks whether the updated user needs to be added or removed from the System Administrators Public Group.</description>
        <name>Relevant_user</name>
        <label>Relevant user?</label>
        <locationX>1062</locationX>
        <locationY>2363</locationY>
        <defaultConnectorLabel>No relevant User</defaultConnectorLabel>
        <rules>
            <name>Change_to_System_Admin</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Profile.Name</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Systemadministrator</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record__Prior.Profile.Name</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Systemadministrator</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Add_to_System_Admin_Group</targetReference>
            </connector>
            <label>Change to System Admin</label>
        </rules>
        <rules>
            <name>Change_from_System_Admin</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Profile.Name</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Systemadministrator</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record__Prior.Profile.Name</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Systemadministrator</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Remove_User_from_Group</targetReference>
            </connector>
            <label>Change from System Admin</label>
        </rules>
    </decisions>
    <decisions>
        <description>Ckecks whether the User Role has been changed to/from certain roles.</description>
        <name>Type_of_Role_Change</name>
        <label>Type of Role Change?</label>
        <locationX>666</locationX>
        <locationY>431</locationY>
        <defaultConnector>
            <targetReference>Get_Public_Group_Id</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No Change to/from LAM</defaultConnectorLabel>
        <rules>
            <name>To_KAM_LAM_Vertriebskoordination</name>
            <conditionLogic>(1 AND 2 AND 3 AND 7) AND (4 OR 5 OR 6 OR 8)</conditionLogic>
            <conditions>
                <leftValueReference>$Record__Prior.UserRole.DeveloperName</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>KAM</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record__Prior.UserRole.DeveloperName</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>LAM</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record__Prior.UserRole.DeveloperName</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>KAM_LAM_Vertriebsinnendienst</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.UserRole.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>KAM</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.UserRole.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>LAM</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.UserRole.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>KAM_LAM_Vertriebsinnendienst</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record__Prior.UserRole.DeveloperName</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Vertriebskoordination</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.UserRole.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Vertriebskoordination</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_CG_RE_Permission_Set</targetReference>
            </connector>
            <label>To KAM/LAM/Vertriebskoordination</label>
        </rules>
        <rules>
            <name>From_KAM_LAM</name>
            <conditionLogic>(1 OR 2 OR 3 OR 7) AND (4 AND 5 AND 6 AND 8)</conditionLogic>
            <conditions>
                <leftValueReference>$Record__Prior.UserRole.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>KAM</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record__Prior.UserRole.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>LAM</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record__Prior.UserRole.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>KAM_LAM_Vertriebsinnendienst</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.UserRole.DeveloperName</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>KAM</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.UserRole.DeveloperName</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>LAM</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.UserRole.DeveloperName</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>KAM_LAM_Vertriebsinnendienst</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record__Prior.UserRole.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Vertriebskoordination</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.UserRole.DeveloperName</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Vertriebskoordination</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_CG_RE_Permission_Set2</targetReference>
            </connector>
            <label>From KAM/LAM</label>
        </rules>
        <rules>
            <name>To_Sales_Excellence</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record__Prior.UserRole.DeveloperName</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Sales_Excellence</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.UserRole.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Sales_Excellence</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Create_Chatter_Group_PS</targetReference>
            </connector>
            <label>To Sales Excellence</label>
        </rules>
        <rules>
            <name>From_Sales_Excellence</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record__Prior.UserRole.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Sales_Excellence</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.UserRole.DeveloperName</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Sales_Excellence</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Create_Chatter_Group_PS2</targetReference>
            </connector>
            <label>From Sales Excellence</label>
        </rules>
    </decisions>
    <decisions>
        <description>Checks whether the User Role has been changed.</description>
        <name>Was_Role_changed</name>
        <label>Was Role changed?</label>
        <locationX>1062</locationX>
        <locationY>323</locationY>
        <defaultConnector>
            <targetReference>Get_Public_Group_Id</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Role NOT changed</defaultConnectorLabel>
        <rules>
            <name>Role_changed</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.UserRoleId</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>$Record__Prior.UserRoleId</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Type_of_Role_Change</targetReference>
            </connector>
            <label>Role changed</label>
        </rules>
    </decisions>
    <description>- Removes or adds a User to or from the public group “Systemadministratoren”
- Removes or adds the Company Group Info Permission Sets from or to KAM/LAM/Vertriebskoordination users
- Removes or adds the Create Chatter Groups, Account Sales Excellence and Export Reports Permission Sets from or to Sales Excellence users</description>
    <environments>Default</environments>
    <interviewLabel>User After Update Flow {!$Flow.CurrentDateTime}</interviewLabel>
    <label>User After Update Flow</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordCreates>
        <name>Add_Account_Sales_Excellence_PS</name>
        <label>Add Account Sales Excellence PS</label>
        <locationX>578</locationX>
        <locationY>863</locationY>
        <connector>
            <targetReference>Get_Export_Reports_PS</targetReference>
        </connector>
        <inputAssignments>
            <field>AssigneeId</field>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>PermissionSetId</field>
            <value>
                <elementReference>Get_Account_Sales_Excellence_PS.Id</elementReference>
            </value>
        </inputAssignments>
        <object>PermissionSetAssignment</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <name>Add_CG_Fields_Info_Permission_Set</name>
        <label>Add CG Fields Info Permission Set</label>
        <locationX>50</locationX>
        <locationY>863</locationY>
        <connector>
            <targetReference>Get_Public_Group_Id</targetReference>
        </connector>
        <inputAssignments>
            <field>AssigneeId</field>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>PermissionSetId</field>
            <value>
                <elementReference>Get_CG_Fields_Info_Permission_Set.Id</elementReference>
            </value>
        </inputAssignments>
        <object>PermissionSetAssignment</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <name>Add_CG_RE_Permission_Set</name>
        <label>Add CG RE Permission Set</label>
        <locationX>50</locationX>
        <locationY>755</locationY>
        <connector>
            <targetReference>Add_CG_Fields_Info_Permission_Set</targetReference>
        </connector>
        <inputAssignments>
            <field>AssigneeId</field>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>PermissionSetId</field>
            <value>
                <elementReference>Get_CG_RE_Permission_Set.Id</elementReference>
            </value>
        </inputAssignments>
        <object>PermissionSetAssignment</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <name>Add_Chatter_Group_PS</name>
        <label>Add Chatter Group PS</label>
        <locationX>578</locationX>
        <locationY>647</locationY>
        <connector>
            <targetReference>Get_Account_Sales_Excellence_PS</targetReference>
        </connector>
        <inputAssignments>
            <field>AssigneeId</field>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>PermissionSetId</field>
            <value>
                <elementReference>Get_Create_Chatter_Group_PS.Id</elementReference>
            </value>
        </inputAssignments>
        <object>PermissionSetAssignment</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <name>Add_Export_Reports_PS</name>
        <label>Add Export Reports PS</label>
        <locationX>578</locationX>
        <locationY>1079</locationY>
        <connector>
            <targetReference>Get_Public_Group_Id</targetReference>
        </connector>
        <inputAssignments>
            <field>AssigneeId</field>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>PermissionSetId</field>
            <value>
                <elementReference>Get_Export_Reports_PS.Id</elementReference>
            </value>
        </inputAssignments>
        <object>PermissionSetAssignment</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <description>Adds the user to the Public Group System Administrators</description>
        <name>Add_to_System_Admin_Group</name>
        <label>Add to System Admin Group</label>
        <locationX>798</locationX>
        <locationY>2471</locationY>
        <inputAssignments>
            <field>GroupId</field>
            <value>
                <elementReference>Get_Public_Group_Id.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>UserOrGroupId</field>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <object>GroupMember</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordDeletes>
        <name>Remove_Account_Sales_Excellence_PS</name>
        <label>Remove Account Sales Excellence PS</label>
        <locationX>842</locationX>
        <locationY>1379</locationY>
        <connector>
            <targetReference>Get_Export_Reports_PS_for_delete</targetReference>
        </connector>
        <inputReference>Get_Account_Sales_Excellence_PSA</inputReference>
    </recordDeletes>
    <recordDeletes>
        <name>Remove_CG_Info_Permission_Sets</name>
        <label>Remove CG Info Permission Sets</label>
        <locationX>314</locationX>
        <locationY>755</locationY>
        <connector>
            <targetReference>Get_Public_Group_Id</targetReference>
        </connector>
        <filterLogic>1 AND (2 OR 3)</filterLogic>
        <filters>
            <field>AssigneeId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>PermissionSetId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_CG_RE_Permission_Set2.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>PermissionSetId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_CG_Fields_Info_Permission_Set2.Id</elementReference>
            </value>
        </filters>
        <object>PermissionSetAssignment</object>
    </recordDeletes>
    <recordDeletes>
        <name>Remove_Chatter_Group_PS</name>
        <label>Remove Chatter Group PS</label>
        <locationX>842</locationX>
        <locationY>863</locationY>
        <connector>
            <targetReference>Get_Account_Sales_Excellence_PS_for_delete</targetReference>
        </connector>
        <inputReference>Get_Create_Chatter_Group_PSA</inputReference>
    </recordDeletes>
    <recordDeletes>
        <name>Remove_Export_Reports_PS</name>
        <label>Remove Export Reports PS</label>
        <locationX>842</locationX>
        <locationY>1895</locationY>
        <connector>
            <targetReference>Get_Public_Group_Id</targetReference>
        </connector>
        <inputReference>Get_Export_Reports_PSA</inputReference>
    </recordDeletes>
    <recordDeletes>
        <description>Removes the user from Public Group of System Administrators.</description>
        <name>Remove_User_from_Group</name>
        <label>Remove User from Group</label>
        <locationX>1062</locationX>
        <locationY>2471</locationY>
        <filterLogic>and</filterLogic>
        <filters>
            <field>GroupId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Public_Group_Id.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>UserOrGroupId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <object>GroupMember</object>
    </recordDeletes>
    <recordLookups>
        <name>Get_Account_Sales_Excellence_PS</name>
        <label>Get Account Sales Excellence PS</label>
        <locationX>578</locationX>
        <locationY>755</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Add_Account_Sales_Excellence_PS</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>ZR_Account_Fields_Sales_Excellence</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>PermissionSet</object>
        <queriedFields>Id</queriedFields>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Account_Sales_Excellence_PS_for_delete</name>
        <label>Get Account Sales Excellence PS for delete</label>
        <locationX>974</locationX>
        <locationY>1055</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Account_Sales_Excellence_PSA</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>ZR_Account_Fields_Sales_Excellence</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>PermissionSet</object>
        <queriedFields>Id</queriedFields>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Account_Sales_Excellence_PSA</name>
        <label>Get Account Sales Excellence PSA</label>
        <locationX>974</locationX>
        <locationY>1163</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Account_SE_PS_assigned</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>AssigneeId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>PermissionSetId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Account_Sales_Excellence_PS_for_delete.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>PermissionSetAssignment</object>
        <queriedFields>Id</queriedFields>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_CG_Fields_Info_Permission_Set</name>
        <label>Get CG Fields Info Permission Set</label>
        <locationX>50</locationX>
        <locationY>647</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Add_CG_RE_Permission_Set</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>ZR_Company_Group_Fields_Info</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>PermissionSet</object>
        <queriedFields>Id</queriedFields>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_CG_Fields_Info_Permission_Set2</name>
        <label>Get CG Fields Info Permission Set2</label>
        <locationX>314</locationX>
        <locationY>647</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Remove_CG_Info_Permission_Sets</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>ZR_Company_Group_Fields_Info</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>PermissionSet</object>
        <queriedFields>Id</queriedFields>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_CG_RE_Permission_Set</name>
        <label>Get CG RE Permission Set</label>
        <locationX>50</locationX>
        <locationY>539</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_CG_Fields_Info_Permission_Set</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>ZR_Company_Group_RE</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>PermissionSet</object>
        <queriedFields>Id</queriedFields>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_CG_RE_Permission_Set2</name>
        <label>Get CG RE Permission Set2</label>
        <locationX>314</locationX>
        <locationY>539</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_CG_Fields_Info_Permission_Set2</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>ZR_Company_Group_RE</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>PermissionSet</object>
        <queriedFields>Id</queriedFields>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Create_Chatter_Group_PS</name>
        <label>Get Create Chatter Group PS</label>
        <locationX>578</locationX>
        <locationY>539</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Add_Chatter_Group_PS</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>ZR_Create_Chatter_Groups</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>PermissionSet</object>
        <queriedFields>Id</queriedFields>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Create_Chatter_Group_PS2</name>
        <label>Get Create Chatter Group PS</label>
        <locationX>974</locationX>
        <locationY>539</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Create_Chatter_Group_PSA</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>ZR_Create_Chatter_Groups</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>PermissionSet</object>
        <queriedFields>Id</queriedFields>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Create_Chatter_Group_PSA</name>
        <label>Get Create Chatter Group PSA</label>
        <locationX>974</locationX>
        <locationY>647</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Create_Chatter_Groups_PS_assigned</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>AssigneeId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>PermissionSetId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Create_Chatter_Group_PS2.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>PermissionSetAssignment</object>
        <queriedFields>Id</queriedFields>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Export_Reports_PS</name>
        <label>Get Export Reports PS</label>
        <locationX>578</locationX>
        <locationY>971</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Add_Export_Reports_PS</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>ZR_Export_Reports</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>PermissionSet</object>
        <queriedFields>Id</queriedFields>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Export_Reports_PS_for_delete</name>
        <label>Get Export Reports PS for delete</label>
        <locationX>974</locationX>
        <locationY>1571</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Export_Reports_PSA</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>ZR_Export_Reports</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>PermissionSet</object>
        <queriedFields>Id</queriedFields>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Export_Reports_PSA</name>
        <label>Get Export Reports PSA</label>
        <locationX>974</locationX>
        <locationY>1679</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Export_Reports_PSA_assigned</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>AssigneeId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>PermissionSetId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Export_Reports_PS_for_delete.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>PermissionSetAssignment</object>
        <queriedFields>Id</queriedFields>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Retreives the Id for the Public Group for System Administrators.</description>
        <name>Get_Public_Group_Id</name>
        <label>Get Public Group Id</label>
        <locationX>1062</locationX>
        <locationY>2255</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Relevant_user</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>System Administrators</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Group</object>
        <queriedFields>Id</queriedFields>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <start>
        <locationX>936</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Was_Role_changed</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>IsActive</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <object>User</object>
        <recordTriggerType>Update</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
</Flow>
