@isTest
public with sharing class SAMLJITHandlerTest {

    @TestSetup
	static void createData(){
		UserName_Suffix__c cSetting = new UserName_Suffix__c();
        cSetting.Name = 'force.com.zrdev';
        insert cSetting;
	}

    @isTest static void createUpdateUser() {

        String assertion1 = 'PHNhbWxwOlJlc3BvbnNlIElEPSJfNDk4OWM2NjktNzMyYy00MTlmLTgwOTItNjYzZWY4YjYzYzhhIiBWZXJzaW9uPSIyLjAiIElzc3VlSW5zdGFudD0iMjAyMS0wMi0xMVQxNDo1NjoyNi42ODFaIiBEZXN0aW5hdGlvbj0iaHR0cHM6Ly96ZXBwZWxpbi16ci0tenJkZXYubXkuc2FsZXNmb3JjZS5jb20/c289MDBEOUUwMDAwMDAySUNBIiBJblJlc3BvbnNlVG89Il8yQ0FBQUFYZ2h5WFhSTURBd01EQXdNREF3TURBd01EQXdBQUFBNXRBX1kxVG1UZ21hS01lTDFzOFZ6YUpFNTVMaHBrbXdvelgzVmpsRkhDeU5Xa1pyb0ljS0hDTGtUMFVaOTgtYjI5NGlYRDRaOTV0eVFpVEhNZl9jSERlenRMcGQ3V0Y1Vkw0YjBRTHpseGJYdHY1eGV1SmVLZS1hZFNaLS1XX2lEMGZFT0t4bWEzeTlPOXk4V0s2RjZOS2lqazJIa09PXy1UOWthTEkwTm1ibHZMdXgtRmsxalBTS2xGeFNoTTFtQkFLaGREaHJ0S1ZvMXl4NVhaUzlZd2RmOHJKQWdJdXVlZ0Qzb3FtaVBQX0VJRjdWekQ4bFlPUTVoNmExdWg5RFpnIiB4bWxuczpzYW1scD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOnByb3RvY29sIj48SXNzdWVyIHhtbG5zPSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6YXNzZXJ0aW9uIj5odHRwczovL3N0cy53aW5kb3dzLm5ldC8wMjUwOTgxYS0xMTMzLTQ5ZTEtYmE4ZS0zYjAyYjc3YmZhMDQvPC9Jc3N1ZXI+PHNhbWxwOlN0YXR1cz48c2FtbHA6U3RhdHVzQ29kZSBWYWx1ZT0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOnN0YXR1czpTdWNjZXNzIi8+PC9zYW1scDpTdGF0dXM+PEFzc2VydGlvbiBJRD0iX2ZmOTM4YjY3LTc1NzQtNDhmMy04ZTFmLTIxYWI0NjlhNDIwMCIgSXNzdWVJbnN0YW50PSIyMDIxLTAyLTExVDE0OjU2OjI2LjY3MVoiIFZlcnNpb249IjIuMCIgeG1sbnM9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDphc3NlcnRpb24iPjxJc3N1ZXI+aHR0cHM6Ly9zdHMud2luZG93cy5uZXQvMDI1MDk4MWEtMTEzMy00OWUxLWJhOGUtM2IwMmI3N2JmYTA0LzwvSXNzdWVyPjxTaWduYXR1cmUgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvMDkveG1sZHNpZyMiPjxTaWduZWRJbmZvPjxDYW5vbmljYWxpemF0aW9uTWV0aG9kIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS8xMC94bWwtZXhjLWMxNG4jIi8+PFNpZ25hdHVyZU1ldGhvZCBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMDQveG1sZHNpZy1tb3JlI3JzYS1zaGEyNTYiLz48UmVmZXJlbmNlIFVSST0iI19mZjkzOGI2Ny03NTc0LTQ4ZjMtOGUxZi0yMWFiNDY5YTQyMDAiPjxUcmFuc2Zvcm1zPjxUcmFuc2Zvcm0gQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjZW52ZWxvcGVkLXNpZ25hdHVyZSIvPjxUcmFuc2Zvcm0gQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiLz48L1RyYW5zZm9ybXM+PERpZ2VzdE1ldGhvZCBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMDQveG1sZW5jI3NoYTI1NiIvPjxEaWdlc3RWYWx1ZT5iUUlWaEgyRzZENEZFMDBPL1lWY0RlYTk2WVlucWF4a3Z1Wlh4OVFSK3I0PTwvRGlnZXN0VmFsdWU+PC9SZWZlcmVuY2U+PC9TaWduZWRJbmZvPjxTaWduYXR1cmVWYWx1ZT5LRklUeU5YNDJpNW5EVHR1dDBRaVRYTGwrZkgwMjBaWUVKdDkrenhpOVVDM2tkdDYyeE9WZCtORzJBU1NabkY2U2pScnlYdWhmNmFLMGtxc2JMZVBSVHo3V2hwb3E0N0p1Y0MvZzY0MjlqRmx0aTNBeXBoWW1USVZ5TUFVazIwTUs4SnRjNmd1dHo4d20rSGVTOTJkdTZEczliWStIcWwzTzQ4K3FzTGdjRzEwUUg2Y3YyNTFoZi9OcStxaGk3dkhtcUFDd3FNUHhxVGpGSmVtVFVwMVduc1VjSklQMEZqZ0VOQlJBK3VBUDhUNTh2T0xsdWFrdDlvZHFJU0kyaW4yZksxWllrOUtTb3lBRS9VZXB5cnJUR2s4WVJkTlZlV2hLZlJoWVZaUnRPcys4K2c0alE5TE93MGxuWkZkNDhmVUlGYWdRY1hrL1N6VWJBYUduSjJYZUE9PTwvU2lnbmF0dXJlVmFsdWU+PEtleUluZm8+PFg1MDlEYXRhPjxYNTA5Q2VydGlmaWNhdGU+TUlJQzhEQ0NBZGlnQXdJQkFnSVFhdEZSeDRwRUhyNVBJQUlmMElLd1ZqQU5CZ2txaGtpRzl3MEJBUXNGQURBME1USXdNQVlEVlFRREV5bE5hV055YjNOdlpuUWdRWHAxY21VZ1JtVmtaWEpoZEdWa0lGTlRUeUJEWlhKMGFXWnBZMkYwWlRBZUZ3MHlNREV5TVRBeE1qTXhNemhhRncweU16RXlNVEF4TWpNeE16aGFNRFF4TWpBd0JnTlZCQU1US1UxcFkzSnZjMjltZENCQmVuVnlaU0JHWldSbGNtRjBaV1FnVTFOUElFTmxjblJwWm1sallYUmxNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQTZDYjZtRUdMZDNVYzhDclR2bkdRUENPbTE2a1lyNkxSRi9kK1lXS3k4M0N4MmMvRVZCUVJJV0k5TjdyQmE4UXJnSXcxTWdWL0lqbk9rOHV5WDdYV203Uy9kWHIxUGJMTWVoYUhYR3NpUG9DV3d5TDlGbytEU3JTYmZTNjhpdjd6bTJPZTZpVWt6NmdqYktyQmFyZmNQZklsM0dFQllRTlFEWnJNdTNBTjhuZzcwTWhZTUU2OXQ1SFZZREQ0SkRnNEVVWTR2UmpNR1FLM0lSR3JFMlR6NWhOQWpqSWVab3F4NFpadUVPdVZNY0JSclkrWmY2TVhDMzNQRWJBei9SVkVaRm5NZmJiM1ZDY0FsMjRRR0FTQXp5eStZSVZpb254RHNsLzJ5aTU2S0toRU14RVFBVUJmdElHWTlOekNiM2R1bzErSWFFSExWbmpmSGFjWnBCZld2UUlEQVFBQk1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQkloZEs2RWNOaUpUMnpxUHlPbEY5T2NmU3U3MmxqNVZlVllLVXhlajc1Tm1QU1puSFNDM1d5OWNjQi85MGhEQXNlT0NDeXNQaW9IRmVBT2tLTFRTV1J3STNrc3hKU2xVS3RXYmNlWk1SejRCTExXam5LU2JaaEdHOFNybmxkczhVdG1ucEdRejVnRGplM1duNWM5aURFL2tDUEc5eGtFWVRIN0gzS1pUdnFmNm53MTEra3ZzVlNnalF0WE9uaURPcjRGcWFYMENFb1ZzZmkvS01Qek12U09QMlBwRmU3eFhKbXhId2Y4OXRxRXM3VTlqaHJTYkh4a1EvN0JpcjR5cDh4YjBubnZwekZWSWZMbXpnWWdDZEh5UzFqS0lQOS8rY2lzMHJpRnhvWmtOWUxjb2NYNkdKdmtQajFGNHpERTBxeDZ1Z0ZEM1lSZ3c3TnRDbGpta3M2PC9YNTA5Q2VydGlmaWNhdGU+PC9YNTA5RGF0YT48L0tleUluZm8+PC9TaWduYXR1cmU+PFN1YmplY3Q+PE5hbWVJRCBGb3JtYXQ9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjEuMTpuYW1laWQtZm9ybWF0OmVtYWlsQWRkcmVzcyI+VGVzdEhBT0B6ZXBwZWxpbi5jb208L05hbWVJRD48U3ViamVjdENvbmZpcm1hdGlvbiBNZXRob2Q9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDpjbTpiZWFyZXIiPjxTdWJqZWN0Q29uZmlybWF0aW9uRGF0YSBJblJlc3BvbnNlVG89Il8yQ0FBQUFYZ2h5WFhSTURBd01EQXdNREF3TURBd01EQXdBQUFBNXRBX1kxVG1UZ21hS01lTDFzOFZ6YUpFNTVMaHBrbXdvelgzVmpsRkhDeU5Xa1pyb0ljS0hDTGtUMFVaOTgtYjI5NGlYRDRaOTV0eVFpVEhNZl9jSERlenRMcGQ3V0Y1Vkw0YjBRTHpseGJYdHY1eGV1SmVLZS1hZFNaLS1XX2lEMGZFT0t4bWEzeTlPOXk4V0s2RjZOS2lqazJIa09PXy1UOWthTEkwTm1ibHZMdXgtRmsxalBTS2xGeFNoTTFtQkFLaGREaHJ0S1ZvMXl4NVhaUzlZd2RmOHJKQWdJdXVlZ0Qzb3FtaVBQX0VJRjdWekQ4bFlPUTVoNmExdWg5RFpnIiBOb3RPbk9yQWZ0ZXI9IjIwMjEtMDItMTFUMTU6NTY6MjYuNDQxWiIgUmVjaXBpZW50PSJodHRwczovL3plcHBlbGluLXpyLS16cmRldi5teS5zYWxlc2ZvcmNlLmNvbT9zbz0wMEQ5RTAwMDAwMDJJQ0EiLz48L1N1YmplY3RDb25maXJtYXRpb24+PC9TdWJqZWN0PjxDb25kaXRpb25zIE5vdEJlZm9yZT0iMjAyMS0wMi0xMVQxNDo1MToyNi40NDFaIiBOb3RPbk9yQWZ0ZXI9IjIwMjEtMDItMTFUMTU6NTY6MjYuNDQxWiI+PEF1ZGllbmNlUmVzdHJpY3Rpb24+PEF1ZGllbmNlPmh0dHBzOi8vemVwcGVsaW4tenItLXpyZGV2Lm15LnNhbGVzZm9yY2UuY29tPC9BdWRpZW5jZT48L0F1ZGllbmNlUmVzdHJpY3Rpb24+PC9Db25kaXRpb25zPjxBdHRyaWJ1dGVTdGF0ZW1lbnQ+PEF0dHJpYnV0ZSBOYW1lPSJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL2lkZW50aXR5L2NsYWltcy90ZW5hbnRpZCI+PEF0dHJpYnV0ZVZhbHVlPjAyNTA5ODFhLTExMzMtNDllMS1iYThlLTNiMDJiNzdiZmEwNDwvQXR0cmlidXRlVmFsdWU+PC9BdHRyaWJ1dGU+PEF0dHJpYnV0ZSBOYW1lPSJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL2lkZW50aXR5L2NsYWltcy9vYmplY3RpZGVudGlmaWVyIj48QXR0cmlidXRlVmFsdWU+ZGExODU2NmQtNDVkZC00MWExLWI3NjYtYTRhNTdkZmQ4Y2Y0PC9BdHRyaWJ1dGVWYWx1ZT48L0F0dHJpYnV0ZT48QXR0cmlidXRlIE5hbWU9Imh0dHA6Ly9zY2hlbWFzLm1pY3Jvc29mdC5jb20vd3MvMjAwOC8wNi9pZGVudGl0eS9jbGFpbXMvZ3JvdXBzIj48QXR0cmlidXRlVmFsdWU+WkJNLVItU2FsZXNmb3JjZS1JRDwvQXR0cmlidXRlVmFsdWU+PEF0dHJpYnV0ZVZhbHVlPlpCTS1SLVNhbGVzZm9yY2UtQUQ8L0F0dHJpYnV0ZVZhbHVlPjwvQXR0cmlidXRlPjxBdHRyaWJ1dGUgTmFtZT0iaHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS9pZGVudGl0eS9jbGFpbXMvaWRlbnRpdHlwcm92aWRlciI+PEF0dHJpYnV0ZVZhbHVlPmh0dHBzOi8vc3RzLndpbmRvd3MubmV0LzAyNTA5ODFhLTExMzMtNDllMS1iYThlLTNiMDJiNzdiZmEwNC88L0F0dHJpYnV0ZVZhbHVlPjwvQXR0cmlidXRlPjxBdHRyaWJ1dGUgTmFtZT0iaHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS9jbGFpbXMvYXV0aG5tZXRob2RzcmVmZXJlbmNlcyI+PEF0dHJpYnV0ZVZhbHVlPmh0dHA6Ly9zY2hlbWFzLm1pY3Jvc29mdC5jb20vd3MvMjAwOC8wNi9pZGVudGl0eS9hdXRoZW50aWNhdGlvbm1ldGhvZC9wYXNzd29yZDwvQXR0cmlidXRlVmFsdWU+PEF0dHJpYnV0ZVZhbHVlPmh0dHA6Ly9zY2hlbWFzLm1pY3Jvc29mdC5jb20vY2xhaW1zL211bHRpcGxlYXV0aG48L0F0dHJpYnV0ZVZhbHVlPjwvQXR0cmlidXRlPjxBdHRyaWJ1dGUgTmFtZT0iZW1haWxhZGRyZXNzIj48QXR0cmlidXRlVmFsdWU+VGVzdEhBT0B6ZXBwZWxpbi5jb208L0F0dHJpYnV0ZVZhbHVlPjwvQXR0cmlidXRlPjxBdHRyaWJ1dGUgTmFtZT0iZ2l2ZW5uYW1lIj48QXR0cmlidXRlVmFsdWU+VGVzdDwvQXR0cmlidXRlVmFsdWU+PC9BdHRyaWJ1dGU+PEF0dHJpYnV0ZSBOYW1lPSJuYW1lIj48QXR0cmlidXRlVmFsdWU+VGVzdEhBT0B6ZXBwZWxpbi5jb208L0F0dHJpYnV0ZVZhbHVlPjwvQXR0cmlidXRlPjxBdHRyaWJ1dGUgTmFtZT0ic3VybmFtZSI+PEF0dHJpYnV0ZVZhbHVlPkhBTzwvQXR0cmlidXRlVmFsdWU+PC9BdHRyaWJ1dGU+PEF0dHJpYnV0ZSBOYW1lPSJyb2xlIj48QXR0cmlidXRlVmFsdWU+U2FsZXNmb3JjZSBUZXN0PC9BdHRyaWJ1dGVWYWx1ZT48L0F0dHJpYnV0ZT48QXR0cmlidXRlIE5hbWU9Im1hbmFnZXIiPjxBdHRyaWJ1dGVWYWx1ZT51c2VyLm1hbmFnZXI8L0F0dHJpYnV0ZVZhbHVlPjwvQXR0cmlidXRlPjwvQXR0cmlidXRlU3RhdGVtZW50PjxBdXRoblN0YXRlbWVudCBBdXRobkluc3RhbnQ9IjIwMjEtMDItMTFUMTQ6NTY6MTEuMzc2WiIgU2Vzc2lvbkluZGV4PSJfZmY5MzhiNjctNzU3NC00OGYzLThlMWYtMjFhYjQ2OWE0MjAwIj48QXV0aG5Db250ZXh0PjxBdXRobkNvbnRleHRDbGFzc1JlZj51cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6YWM6Y2xhc3NlczpQYXNzd29yZDwvQXV0aG5Db250ZXh0Q2xhc3NSZWY+PC9BdXRobkNvbnRleHQ+PC9BdXRoblN0YXRlbWVudD48L0Fzc2VydGlvbj48L3NhbWxwOlJlc3BvbnNlPg==';
        String assertion2 = 'PHNhbWxwOlJlc3BvbnNlIElEPSJfODQ2NjRhYTctMDBlYi00MzcwLWE0NTYtMGM5OGViNWFmNzNmIiBWZXJzaW9uPSIyLjAiIElzc3VlSW5zdGFudD0iMjAyMS0wNi0yMVQwODo0MzoyNy40MTJaIiBEZXN0aW5hdGlvbj0iaHR0cHM6Ly96ZXBwZWxpbi16ci0tdWF0Lm15LnNhbGVzZm9yY2UuY29tP3NvPTAwRDdhMDAwMDAwQWJCYiIgSW5SZXNwb25zZVRvPSJfMkNBQUFBWHE5N3ktNU1EQXdNREF3TURBd01EQXdNREF3QUFBQTZNX1JRX29pSFpWM1hHNG1SaXdZUnZXUGNjZUVhZWRxME1NYlFway1udkRaSk13RlFSTVVtNUszRC13ZVZuSnFYdnNjZHVoeFlrb0xiT3FOQ3k0aW5zWnN0REozVmhwSFlIVDVMTXpiQm45Y1hQOEtfc3JZWm1wY3loRXhhelZSODVmOHBqMF85SUNqVWJybFMwTW0xZ1MyT0lqMXZBN2ZsSTNFaUQyNW9WMnplNmgydXhIYl9RVWZpcVVRQ3A2S1FsNHhXQzZTSGVwcDNPUVl1MkxkZGhpMFlnTTFyVFlpNkNGWk8tcHNYaWlpbFUwbjZHdENtNmhLLW9VQl9vTVNkUSIgeG1sbnM6c2FtbHA9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDpwcm90b2NvbCI+PElzc3VlciB4bWxucz0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOmFzc2VydGlvbiI+aHR0cHM6Ly9zdHMud2luZG93cy5uZXQvMDI1MDk4MWEtMTEzMy00OWUxLWJhOGUtM2IwMmI3N2JmYTA0LzwvSXNzdWVyPjxzYW1scDpTdGF0dXM+PHNhbWxwOlN0YXR1c0NvZGUgVmFsdWU9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDpzdGF0dXM6U3VjY2VzcyIvPjwvc2FtbHA6U3RhdHVzPjxBc3NlcnRpb24gSUQ9Il84NTZiODFlMy05NWEwLTRjYjctYjY0Yy1kNmJjNGUwOGNhMDAiIElzc3VlSW5zdGFudD0iMjAyMS0wNi0yMVQwODo0MzoyNy4zOTdaIiBWZXJzaW9uPSIyLjAiIHhtbG5zPSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6YXNzZXJ0aW9uIj48SXNzdWVyPmh0dHBzOi8vc3RzLndpbmRvd3MubmV0LzAyNTA5ODFhLTExMzMtNDllMS1iYThlLTNiMDJiNzdiZmEwNC88L0lzc3Vlcj48U2lnbmF0dXJlIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjIj48U2lnbmVkSW5mbz48Q2Fub25pY2FsaXphdGlvbk1ldGhvZCBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMTAveG1sLWV4Yy1jMTRuIyIvPjxTaWduYXR1cmVNZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGRzaWctbW9yZSNyc2Etc2hhMjU2Ii8+PFJlZmVyZW5jZSBVUkk9IiNfODU2YjgxZTMtOTVhMC00Y2I3LWI2NGMtZDZiYzRlMDhjYTAwIj48VHJhbnNmb3Jtcz48VHJhbnNmb3JtIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMC8wOS94bWxkc2lnI2VudmVsb3BlZC1zaWduYXR1cmUiLz48VHJhbnNmb3JtIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS8xMC94bWwtZXhjLWMxNG4jIi8+PC9UcmFuc2Zvcm1zPjxEaWdlc3RNZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGVuYyNzaGEyNTYiLz48RGlnZXN0VmFsdWU+dUwvenBEUHlsRVhsV3R5K1RCM2pRRDN5QkVzcHlxdkpzQ3NjWlpUbjBIcz08L0RpZ2VzdFZhbHVlPjwvUmVmZXJlbmNlPjwvU2lnbmVkSW5mbz48U2lnbmF0dXJlVmFsdWU+aE1adWRsR0ZlbjRNMXoyRUx2RmR6L0prVXNhWTF6dlhJem9qSC9jQmxTVUZZWVV4eWRrWjZ2UkRvdTYzSUpIWHlueSs2MURHUTF2Y3pacWsyZzV5TkxLY1lFRnFab1IzbFk2UVdaQnIxZUNJdGR1aXNkTEFERTdWc2VGSEw2V2R1VkQ2eVVGd3F6YmtGbDh5R3FiYkp2czVmc3dnU0QrOXFtTXRkQm5WdzdqSFZaYU5hODFObVo2cGc1VFJ3R21GdmUzMnMxamxhenJ5UTRlSVJaSWdGQW1BWlJXZUZwZW81ZFU3VDBweHd6UFlIVUk1S1RXNGJYQjhpdkVSNEhhbTg3VGN1cnJabXoyMEsyR2tnWGhONityWkpaQjF6b3JQZGdwVWc4bFNFV3pKS2FjZGkzZ3FFdFR0TTdrVFlpeTZhb0VQN0Rob0RheG5vZHhpUko1c2VnPT08L1NpZ25hdHVyZVZhbHVlPjxLZXlJbmZvPjxYNTA5RGF0YT48WDUwOUNlcnRpZmljYXRlPk1JSUM4RENDQWRpZ0F3SUJBZ0lRWTBYVlJndDQzTHBQRGFVVlI4OFAyREFOQmdrcWhraUc5dzBCQVFzRkFEQTBNVEl3TUFZRFZRUURFeWxOYVdOeWIzTnZablFnUVhwMWNtVWdSbVZrWlhKaGRHVmtJRk5UVHlCRFpYSjBhV1pwWTJGMFpUQWVGdzB5TVRBMk1UZ3dPVEkxTkRKYUZ3MHlOREEyTVRnd09USTFOREphTURReE1qQXdCZ05WQkFNVEtVMXBZM0p2YzI5bWRDQkJlblZ5WlNCR1pXUmxjbUYwWldRZ1UxTlBJRU5sY25ScFptbGpZWFJsTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFwOU5kY09uQkdGK2ZLK21rdEprQTNRRjRTbzRRUTRkc0xzQUZWTHBKTW5ZRlo1TmttQ0dEVmxTakRaL2tqN0ZXZU1qSHNsQThxNlNrMDJwTTlpd0tiYjFhN1k3TFdGVXY2Zk5RWFpSWDVKb0p2R3NrQWl6d0NSNFprdjJuSHkvMU5sbEZ1NTk3eE1ZSE9pMS9CMHB0RVF6cDNTZGFrNWJMVDNDdlVHcnhxclN6Vm9yMi83b2V3dWFxRmNaRFNzbG45QUlzblZvaTJLNjUzaG01TFNCeTEzTWNpYlZ1b1VhcUduU085T3pRRVVUSkJFMGRSTFJHdHVFd2xISU5heVJzU0lXMncxSHpKeWNRTG1VWHFOOTRCNm9yOFFnZlQyMlZkblplUktHUWYzY1BrMHNrM0dlYi8xSkVUSXRYZ3MyZWJxRWJFaGUwUWJkcmt1Z2Q4NlRHc1FJREFRQUJNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUNkWlNJUk5VQStIR2dUQzUvNUhaN2FNL3J1ZkNELzZlSnZVNlRDMHFtY3l5T1JFYnVjd0tsK0p6Uy9scGhKczVvbmR5YWFPSkJEZS9pUzJ6MW9PSUhXYjZBUUVFUktTK0dOYjA2SDhxd1M4TmZkQ2xRSzNwVG9TWG9VaFN0R1B0SVhrcHFQSzJmdE1US3oxMCs1TGo5VmNyeXA3K2ZCSFY0NGx4ZWVpSHlJT256b2poS0VhYWRMSGlwdzF0QjlDVzBzampDSHZGcHJVajlObE5kZW9xYXpGcCswbEFNZzdQVjF3OTJGQ1d1aTEzVE9kZElxNEx4OHJ0MWJ3aVUxTEVCckRDSkgrRXhaNDBlNllEWU5ZaXRURXJ1ZzRLTENScEpEb25MdjRsaVdvaTg0TVA5akhlTGlFZVVFMGRpODVGVmRua1lncEhSaFFGdVBEWE5qQWt3VDwvWDUwOUNlcnRpZmljYXRlPjwvWDUwOURhdGE+PC9LZXlJbmZvPjwvU2lnbmF0dXJlPjxTdWJqZWN0PjxOYW1lSUQgRm9ybWF0PSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoxLjE6bmFtZWlkLWZvcm1hdDplbWFpbEFkZHJlc3MiPkFzdHJpZC5Lbm9lZGxAemVwcGVsaW4uY29tPC9OYW1lSUQ+PFN1YmplY3RDb25maXJtYXRpb24gTWV0aG9kPSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6Y206YmVhcmVyIj48U3ViamVjdENvbmZpcm1hdGlvbkRhdGEgSW5SZXNwb25zZVRvPSJfMkNBQUFBWHE5N3ktNU1EQXdNREF3TURBd01EQXdNREF3QUFBQTZNX1JRX29pSFpWM1hHNG1SaXdZUnZXUGNjZUVhZWRxME1NYlFway1udkRaSk13RlFSTVVtNUszRC13ZVZuSnFYdnNjZHVoeFlrb0xiT3FOQ3k0aW5zWnN0REozVmhwSFlIVDVMTXpiQm45Y1hQOEtfc3JZWm1wY3loRXhhelZSODVmOHBqMF85SUNqVWJybFMwTW0xZ1MyT0lqMXZBN2ZsSTNFaUQyNW9WMnplNmgydXhIYl9RVWZpcVVRQ3A2S1FsNHhXQzZTSGVwcDNPUVl1MkxkZGhpMFlnTTFyVFlpNkNGWk8tcHNYaWlpbFUwbjZHdENtNmhLLW9VQl9vTVNkUSIgTm90T25PckFmdGVyPSIyMDIxLTA2LTIxVDA5OjQzOjI3LjIwOVoiIFJlY2lwaWVudD0iaHR0cHM6Ly96ZXBwZWxpbi16ci0tdWF0Lm15LnNhbGVzZm9yY2UuY29tP3NvPTAwRDdhMDAwMDAwQWJCYiIvPjwvU3ViamVjdENvbmZpcm1hdGlvbj48L1N1YmplY3Q+PENvbmRpdGlvbnMgTm90QmVmb3JlPSIyMDIxLTA2LTIxVDA4OjM4OjI3LjIwOVoiIE5vdE9uT3JBZnRlcj0iMjAyMS0wNi0yMVQwOTo0MzoyNy4yMDlaIj48QXVkaWVuY2VSZXN0cmljdGlvbj48QXVkaWVuY2U+aHR0cHM6Ly96ZXBwZWxpbi16ci0tdWF0Lm15LnNhbGVzZm9yY2UuY29tPC9BdWRpZW5jZT48L0F1ZGllbmNlUmVzdHJpY3Rpb24+PC9Db25kaXRpb25zPjxBdHRyaWJ1dGVTdGF0ZW1lbnQ+PEF0dHJpYnV0ZSBOYW1lPSJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL2lkZW50aXR5L2NsYWltcy90ZW5hbnRpZCI+PEF0dHJpYnV0ZVZhbHVlPjAyNTA5ODFhLTExMzMtNDllMS1iYThlLTNiMDJiNzdiZmEwNDwvQXR0cmlidXRlVmFsdWU+PC9BdHRyaWJ1dGU+PEF0dHJpYnV0ZSBOYW1lPSJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL2lkZW50aXR5L2NsYWltcy9vYmplY3RpZGVudGlmaWVyIj48QXR0cmlidXRlVmFsdWU+ZGM0MTQwMmEtMzcwMi00ZjYyLWJlNGMtZGU4OTM2NmNiMDJhPC9BdHRyaWJ1dGVWYWx1ZT48L0F0dHJpYnV0ZT48QXR0cmlidXRlIE5hbWU9Imh0dHA6Ly9zY2hlbWFzLm1pY3Jvc29mdC5jb20vd3MvMjAwOC8wNi9pZGVudGl0eS9jbGFpbXMvZ3JvdXBzIj48QXR0cmlidXRlVmFsdWU+WlJELU8tU0Zfa2ZtVmVyd2FsdHVuZy1Db250cm9sbGluZ19TRjwvQXR0cmlidXRlVmFsdWU+PEF0dHJpYnV0ZVZhbHVlPlpSRC1PLVNGX0xlc2VyZWNodGVfU0Y8L0F0dHJpYnV0ZVZhbHVlPjxBdHRyaWJ1dGVWYWx1ZT5aUkQtTy1TRl9TeXN0ZW1BZG1pbmlzdHJhdG9yPC9BdHRyaWJ1dGVWYWx1ZT48QXR0cmlidXRlVmFsdWU+WlJELU8tU0ZfSW5uZW5kaWVuc3Q8L0F0dHJpYnV0ZVZhbHVlPjxBdHRyaWJ1dGVWYWx1ZT5aUkQtTy1TRl9TYWxlc09yZzwvQXR0cmlidXRlVmFsdWU+PC9BdHRyaWJ1dGU+PEF0dHJpYnV0ZSBOYW1lPSJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL2lkZW50aXR5L2NsYWltcy9pZGVudGl0eXByb3ZpZGVyIj48QXR0cmlidXRlVmFsdWU+aHR0cHM6Ly9zdHMud2luZG93cy5uZXQvMDI1MDk4MWEtMTEzMy00OWUxLWJhOGUtM2IwMmI3N2JmYTA0LzwvQXR0cmlidXRlVmFsdWU+PC9BdHRyaWJ1dGU+PEF0dHJpYnV0ZSBOYW1lPSJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL2NsYWltcy9hdXRobm1ldGhvZHNyZWZlcmVuY2VzIj48QXR0cmlidXRlVmFsdWU+aHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS93cy8yMDA4LzA2L2lkZW50aXR5L2F1dGhlbnRpY2F0aW9ubWV0aG9kL3Bhc3N3b3JkPC9BdHRyaWJ1dGVWYWx1ZT48QXR0cmlidXRlVmFsdWU+aHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS93cy8yMDA4LzA2L2lkZW50aXR5L2F1dGhlbnRpY2F0aW9ubWV0aG9kL3g1MDk8L0F0dHJpYnV0ZVZhbHVlPjwvQXR0cmlidXRlPjxBdHRyaWJ1dGUgTmFtZT0iRWluZGV1dGlnZSBCZW51dHplci1JRCI+PEF0dHJpYnV0ZVZhbHVlPkFzdHJpZC5Lbm9lZGxAemVwcGVsaW4uY29tPC9BdHRyaWJ1dGVWYWx1ZT48L0F0dHJpYnV0ZT48QXR0cmlidXRlIE5hbWU9ImVtYWlsYWRkcmVzcyI+PEF0dHJpYnV0ZVZhbHVlPkFzdHJpZC5Lbm9lZGxAemVwcGVsaW4uY29tPC9BdHRyaWJ1dGVWYWx1ZT48L0F0dHJpYnV0ZT48QXR0cmlidXRlIE5hbWU9ImdpdmVubmFtZSI+PEF0dHJpYnV0ZVZhbHVlPkFzdHJpZDwvQXR0cmlidXRlVmFsdWU+PC9BdHRyaWJ1dGU+PEF0dHJpYnV0ZSBOYW1lPSJzYW1hY2NvdW50bmFtZSI+PEF0dHJpYnV0ZVZhbHVlPmtub2VkbEE8L0F0dHJpYnV0ZVZhbHVlPjwvQXR0cmlidXRlPjxBdHRyaWJ1dGUgTmFtZT0ic3VybmFtZSI+PEF0dHJpYnV0ZVZhbHVlPktuw7ZkbDwvQXR0cmlidXRlVmFsdWU+PC9BdHRyaWJ1dGU+PC9BdHRyaWJ1dGVTdGF0ZW1lbnQ+PEF1dGhuU3RhdGVtZW50IEF1dGhuSW5zdGFudD0iMjAyMS0wNi0yMVQwNDo1OTowMy4wNjFaIiBTZXNzaW9uSW5kZXg9Il84NTZiODFlMy05NWEwLTRjYjctYjY0Yy1kNmJjNGUwOGNhMDAiPjxBdXRobkNvbnRleHQ+PEF1dGhuQ29udGV4dENsYXNzUmVmPnVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDphYzpjbGFzc2VzOlBhc3N3b3JkPC9BdXRobkNvbnRleHRDbGFzc1JlZj48L0F1dGhuQ29udGV4dD48L0F1dGhuU3RhdGVtZW50PjwvQXNzZXJ0aW9uPjwvc2FtbHA6UmVzcG9uc2U+';
        String assertion3 = 'PHNhbWxwOlJlc3BvbnNlIElEPSJfYmQwYTllN2YtZDlhYS00MTRkLWI4MDUtYjA2YjBhYWZjMDNmIiBWZXJzaW9uPSIyLjAiIElzc3VlSW5zdGFudD0iMjAyMS0wNy0xMlQwODo1ODo1Mi40OTVaIiBEZXN0aW5hdGlvbj0iaHR0cHM6Ly96ZXBwZWxpbi16ci0tbWFzaW50Lm15LnNhbGVzZm9yY2UuY29tP3NvPTAwRDVyMDAwMDAwOGlUSCIgSW5SZXNwb25zZVRvPSJfMkNBQUFBWHNxSXRobU1EQXdNREF3TURBd01EQXdNREF3QUFBQTZQb19INDFXRWlHclBQdnpvck1JcENma2dQUV9aTUpDN2pBRk5sUUJzUkxaT1FlOGUyU2hmZ0pOUlZ3QzdycnB0TE9XejNDcnZyRXlPcHFwdVEzelo2THZHd0xiWEdHakJBdUdmdnAtUzczNnNRN05yQi1pbVpiX012YlhoWWtvejRmd1lFVHcwOEs2aXM1Yk5xakRtMDlVUk9VRDhEOGNmU2ZQX0l4My1SdnR6WlpYS3ZNZzdyVWhfUzUwemhfSktpYzlSSGgtdVJxM3dYdTRfVEQwQmVGSGxxRnF3QmhfaG9mMWtvRmdHWVAtaXZITDJJVlR4MVlrR0ZLdEpqRmhGZyIgeG1sbnM6c2FtbHA9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDpwcm90b2NvbCI+PElzc3VlciB4bWxucz0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOmFzc2VydGlvbiI+aHR0cHM6Ly9zdHMud2luZG93cy5uZXQvMDI1MDk4MWEtMTEzMy00OWUxLWJhOGUtM2IwMmI3N2JmYTA0LzwvSXNzdWVyPjxzYW1scDpTdGF0dXM+PHNhbWxwOlN0YXR1c0NvZGUgVmFsdWU9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDpzdGF0dXM6U3VjY2VzcyIvPjwvc2FtbHA6U3RhdHVzPjxBc3NlcnRpb24gSUQ9Il81ZGMzMzc1YS1mZGY3LTQxMzAtODQ0YS04N2NkOGQ2ODRkMDIiIElzc3VlSW5zdGFudD0iMjAyMS0wNy0xMlQwODo1ODo1Mi40NjNaIiBWZXJzaW9uPSIyLjAiIHhtbG5zPSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6YXNzZXJ0aW9uIj48SXNzdWVyPmh0dHBzOi8vc3RzLndpbmRvd3MubmV0LzAyNTA5ODFhLTExMzMtNDllMS1iYThlLTNiMDJiNzdiZmEwNC88L0lzc3Vlcj48U2lnbmF0dXJlIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjIj48U2lnbmVkSW5mbz48Q2Fub25pY2FsaXphdGlvbk1ldGhvZCBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMTAveG1sLWV4Yy1jMTRuIyIvPjxTaWduYXR1cmVNZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGRzaWctbW9yZSNyc2Etc2hhMjU2Ii8+PFJlZmVyZW5jZSBVUkk9IiNfNWRjMzM3NWEtZmRmNy00MTMwLTg0NGEtODdjZDhkNjg0ZDAyIj48VHJhbnNmb3Jtcz48VHJhbnNmb3JtIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMC8wOS94bWxkc2lnI2VudmVsb3BlZC1zaWduYXR1cmUiLz48VHJhbnNmb3JtIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS8xMC94bWwtZXhjLWMxNG4jIi8+PC9UcmFuc2Zvcm1zPjxEaWdlc3RNZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGVuYyNzaGEyNTYiLz48RGlnZXN0VmFsdWU+cEhxb2NMMWtRNzd6WGRzdlNlUE94QW9QTWVtWE14b1RRYXdvcGxPMW82Yz08L0RpZ2VzdFZhbHVlPjwvUmVmZXJlbmNlPjwvU2lnbmVkSW5mbz48U2lnbmF0dXJlVmFsdWU+VkdMWTFYVEFOTERRcGdDQWI5QnAveEVLS0xFWTYrNGZ6Zm9TUEhTTUgvTndEWnVmdVk3eEJoOHR1Nk03Vkx1bDNPcmdEOG5Nci9VNnJDdkQwNXZGUUJFcEJxRkM5NkpjdWs4MjUrQjhTNGhaTm5PSjUwS3QyQUF2RzZwZ0hjTllpWmd1MDdjR3I3SEJZNThWZ28zdFdSQUtrak5kazRFMTRRbGhHaXpic0xvMGVhT3NuTlE2QUdpeGx0ZFlBbC81Q051ZkZndUtlbDNNSGpiVmNFT21EVzliTWhEYUpoeE5yNk5Tb0pTSzVkOW8xY1hMeDdZRlFqQnRpU0dibTRzLzNyWkRkNlJhT2Z5NCtwREUyRkc1Nk5RM0krVUpuNjdNWGJUOEVCSTRZZ2ZKNGZjL1FGR3VVQXdUbTYyNUJlN1c2VDB6NkxKZEpZemRQdFFFWlBHRTV3PT08L1NpZ25hdHVyZVZhbHVlPjxLZXlJbmZvPjxYNTA5RGF0YT48WDUwOUNlcnRpZmljYXRlPk1JSUM4RENDQWRpZ0F3SUJBZ0lRSkR0WlVhZndTNHBCbVlkdEdyOU4rREFOQmdrcWhraUc5dzBCQVFzRkFEQTBNVEl3TUFZRFZRUURFeWxOYVdOeWIzTnZablFnUVhwMWNtVWdSbVZrWlhKaGRHVmtJRk5UVHlCRFpYSjBhV1pwWTJGMFpUQWVGdzB5TVRBME1qQXdPREk0TlRkYUZ3MHlOREEwTWpBd09ESTROVGRhTURReE1qQXdCZ05WQkFNVEtVMXBZM0p2YzI5bWRDQkJlblZ5WlNCR1pXUmxjbUYwWldRZ1UxTlBJRU5sY25ScFptbGpZWFJsTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF1UG1UQ0VoVCtqSmtCSGJIalFxV1FrdnNUbUtKc1RrT2p2MnVHeFFqV1BLQjNBTlcvYVFPNGxJaldqdFJveDFMZkVVdnpTVmdQeTFiTDY0dEtYRXJ3dm9wUnJQb3RIRENUYms2WFk0VjVxS2xNQ3FjR3gvZ1lPeFE4UndjeDU1Si9HbzJtQ2VLUVlkdysvQlp5WW13L1ZtNzlzRHBpSUhsdFFFalB4K1YrV1J1QW1aYWt5ZXF4RU0vQTYva29iYzgwQnVqRU1tb2dmRjZIWlE5T0lPN2lOdFgyd2V1UFo2M3NoWkZVUzRIWEl0NHJ3QjRHWlFkQTNkek1wZTlLZ2R5N01GV1YxNWU5NzdVcE9RQmtwSzN3OXJGQ2tKMS9TNm9jbmV3SUdaTzhTZmJ5dVBvMnFUajRWYS9FWDVONnArTmJXRTQvbVFxR3RhUmpzYitJalUxWlFJREFRQUJNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUNyVjZYenpKTmFQYTRFSjBwaExxbFdka1ZrYjdDVmtWQkg1c2lHVVRwOTlmQzg3dW9DWkp3NDBJUkJTK0JFc3kwaXpsZk4vczFVeVpLMzJOTmpoNmw1N2xjbVJySCtnTStGQ29uVWt4OEN1TDFOWHQ2bFZHWVNzSmRhcHpONHVNZUpkRVhoZFdDTlhNcUNrTVBoYTk1M2M0Y3BLTlVRd2tvSGxYQmJPQUp0YTFTcjVwYkxCQlhhT0VhYzVVWSsyd05YOXZmQ2MzdXBHeUhqbE1ScmFFSXE5STRQdC96aGsxMDhhSFJINDJtVEdkVE9HeEJaTStpUjN1R2FKdTBza29LQStESnZ2Tk5xanFFUlJZS3IzV1UzNDZLdkdPb0hBMDhhYmhEWTU2b0hqcjZpVGJFWXhBMzRNUkJyMTZ0TWY3K0dmUmh0WnJHZUhQZi82dDd4eVVjczwvWDUwOUNlcnRpZmljYXRlPjwvWDUwOURhdGE+PC9LZXlJbmZvPjwvU2lnbmF0dXJlPjxTdWJqZWN0PjxOYW1lSUQgRm9ybWF0PSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoxLjE6bmFtZWlkLWZvcm1hdDplbWFpbEFkZHJlc3MiPkhlaW56LVdpbGxpLkVpY2htZXllci5leHRlcm5hbEB6ZXBwZWxpbi5jb208L05hbWVJRD48U3ViamVjdENvbmZpcm1hdGlvbiBNZXRob2Q9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDpjbTpiZWFyZXIiPjxTdWJqZWN0Q29uZmlybWF0aW9uRGF0YSBJblJlc3BvbnNlVG89Il8yQ0FBQUFYc3FJdGhtTURBd01EQXdNREF3TURBd01EQXdBQUFBNlBvX0g0MVdFaUdyUFB2em9yTUlwQ2ZrZ1BRX1pNSkM3akFGTmxRQnNSTFpPUWU4ZTJTaGZnSk5SVndDN3JycHRMT1d6M0NydnJFeU9wcXB1UTN6WjZMdkd3TGJYR0dqQkF1R2Z2cC1TNzM2c1E3TnJCLWltWmJfTXZiWGhZa296NGZ3WUVUdzA4SzZpczViTnFqRG0wOVVST1VEOEQ4Y2ZTZlBfSXgzLVJ2dHpaWlhLdk1nN3JVaF9TNTB6aF9KS2ljOVJIaC11UnEzd1h1NF9URDBCZUZIbHFGcXdCaF9ob2Yxa29GZ0dZUC1pdkhMMklWVHgxWWtHRkt0SmpGaEZnIiBOb3RPbk9yQWZ0ZXI9IjIwMjEtMDctMTJUMDk6NTg6NTIuMjQ0WiIgUmVjaXBpZW50PSJodHRwczovL3plcHBlbGluLXpyLS1tYXNpbnQubXkuc2FsZXNmb3JjZS5jb20/c289MDBENXIwMDAwMDA4aVRIIi8+PC9TdWJqZWN0Q29uZmlybWF0aW9uPjwvU3ViamVjdD48Q29uZGl0aW9ucyBOb3RCZWZvcmU9IjIwMjEtMDctMTJUMDg6NTM6NTIuMjQ0WiIgTm90T25PckFmdGVyPSIyMDIxLTA3LTEyVDA5OjU4OjUyLjI0NFoiPjxBdWRpZW5jZVJlc3RyaWN0aW9uPjxBdWRpZW5jZT5odHRwczovL3plcHBlbGluLXpyLS1tYXNpbnQubXkuc2FsZXNmb3JjZS5jb208L0F1ZGllbmNlPjwvQXVkaWVuY2VSZXN0cmljdGlvbj48L0NvbmRpdGlvbnM+PEF0dHJpYnV0ZVN0YXRlbWVudD48QXR0cmlidXRlIE5hbWU9Imh0dHA6Ly9zY2hlbWFzLm1pY3Jvc29mdC5jb20vaWRlbnRpdHkvY2xhaW1zL3RlbmFudGlkIj48QXR0cmlidXRlVmFsdWU+MDI1MDk4MWEtMTEzMy00OWUxLWJhOGUtM2IwMmI3N2JmYTA0PC9BdHRyaWJ1dGVWYWx1ZT48L0F0dHJpYnV0ZT48QXR0cmlidXRlIE5hbWU9Imh0dHA6Ly9zY2hlbWFzLm1pY3Jvc29mdC5jb20vaWRlbnRpdHkvY2xhaW1zL29iamVjdGlkZW50aWZpZXIiPjxBdHRyaWJ1dGVWYWx1ZT4yMzA0MmEwYi1iMjk5LTQ5YjctYjllNC05MDYxMjk1YmFlNDE8L0F0dHJpYnV0ZVZhbHVlPjwvQXR0cmlidXRlPjxBdHRyaWJ1dGUgTmFtZT0iaHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS9pZGVudGl0eS9jbGFpbXMvaWRlbnRpdHlwcm92aWRlciI+PEF0dHJpYnV0ZVZhbHVlPmh0dHBzOi8vc3RzLndpbmRvd3MubmV0LzAyNTA5ODFhLTExMzMtNDllMS1iYThlLTNiMDJiNzdiZmEwNC88L0F0dHJpYnV0ZVZhbHVlPjwvQXR0cmlidXRlPjxBdHRyaWJ1dGUgTmFtZT0iaHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS9jbGFpbXMvYXV0aG5tZXRob2RzcmVmZXJlbmNlcyI+PEF0dHJpYnV0ZVZhbHVlPmh0dHA6Ly9zY2hlbWFzLm1pY3Jvc29mdC5jb20vd3MvMjAwOC8wNi9pZGVudGl0eS9hdXRoZW50aWNhdGlvbm1ldGhvZC9wYXNzd29yZDwvQXR0cmlidXRlVmFsdWU+PEF0dHJpYnV0ZVZhbHVlPmh0dHA6Ly9zY2hlbWFzLm1pY3Jvc29mdC5jb20vd3MvMjAwOC8wNi9pZGVudGl0eS9hdXRoZW50aWNhdGlvbm1ldGhvZC94NTA5PC9BdHRyaWJ1dGVWYWx1ZT48L0F0dHJpYnV0ZT48QXR0cmlidXRlIE5hbWU9ImVtYWlsYWRkcmVzcyI+PEF0dHJpYnV0ZVZhbHVlPkhlaW56LVdpbGxpLkVpY2htZXllci5leHRlcm5hbEB6ZXBwZWxpbi5jb208L0F0dHJpYnV0ZVZhbHVlPjwvQXR0cmlidXRlPjxBdHRyaWJ1dGUgTmFtZT0iZ2l2ZW5uYW1lIj48QXR0cmlidXRlVmFsdWU+SGVpbnotV2lsbGk8L0F0dHJpYnV0ZVZhbHVlPjwvQXR0cmlidXRlPjxBdHRyaWJ1dGUgTmFtZT0ic3VybmFtZSI+PEF0dHJpYnV0ZVZhbHVlPkVpY2htZXllcjwvQXR0cmlidXRlVmFsdWU+PC9BdHRyaWJ1dGU+PEF0dHJpYnV0ZSBOYW1lPSJzYW1hY2NvdW50bmFtZSI+PEF0dHJpYnV0ZVZhbHVlPlBST0dSRVNTSUhFSTwvQXR0cmlidXRlVmFsdWU+PC9BdHRyaWJ1dGU+PEF0dHJpYnV0ZSBOYW1lPSJFaW5kZXV0aWdlIEJlbnV0emVyLUlEIj48QXR0cmlidXRlVmFsdWU+SGVpbnotV2lsbGkuRWljaG1leWVyLmV4dGVybmFsQHplcHBlbGluLmNvbTwvQXR0cmlidXRlVmFsdWU+PC9BdHRyaWJ1dGU+PC9BdHRyaWJ1dGVTdGF0ZW1lbnQ+PEF1dGhuU3RhdGVtZW50IEF1dGhuSW5zdGFudD0iMjAyMS0wNy0xMlQwNToyNDo0Ni44NjhaIiBTZXNzaW9uSW5kZXg9Il81ZGMzMzc1YS1mZGY3LTQxMzAtODQ0YS04N2NkOGQ2ODRkMDIiPjxBdXRobkNvbnRleHQ+PEF1dGhuQ29udGV4dENsYXNzUmVmPnVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDphYzpjbGFzc2VzOlBhc3N3b3JkPC9BdXRobkNvbnRleHRDbGFzc1JlZj48L0F1dGhuQ29udGV4dD48L0F1dGhuU3RhdGVtZW50PjwvQXNzZXJ0aW9uPjwvc2FtbHA6UmVzcG9uc2U+';

        // User 1
        Map<String, String> attributes1=new  Map<String, String>
            {
                    'givenname'=>'First Name',
                    'surname'=>'LastName1',                                                                            
                    'emailaddress'=>'TestHAO1@zeppelin.com',                                                                         
                    'mobile'=>'8655033306',                                                                         
                    'phone'=>'8655033306',
                    'username'=>'ad_login_name1'
            };
        User oUser1=(new SAMLJITHandler()).createUser(null, null,null,
        attributes1.get('email'),attributes1, assertion1);

        System.assertEquals(true,oUser1.Id!=null,'User Created Successfully');

        attributes1=new  Map<String, String>
            {
                    'givenname'=>'First Name Updated',
                    'surname'=>'LastName1',                                                                            
                    'emailaddress'=>'TestHAO1@zeppelin.com',                                                                         
                    'mobile'=>'8655033306',                                                                         
                    'phone'=>'8655033306',
                    'username'=>'ad_login_name1 updated'
            };
            (new SAMLJITHandler()).updateUser(oUser1.Id, null,null,null,
            attributes1.get('emailaddress'),attributes1, assertion1);  
        User updatedUser1=[select Id, FirstName, AD_Login_Name__c from user where Id=:oUser1.Id];   
        System.assertEquals(true,updatedUser1.FirstName==attributes1.get('givenname'),'User updated Successfully');

        // User 2
        Map<String, String> attributes2=new  Map<String, String>
            {
                    'givenname'=>'First Name',
                    'surname'=>'LastName2',                                                                            
                    'emailaddress'=>'TestHAO2@zeppelin.com',                                                                         
                    'mobile'=>'8655033306',                                                                         
                    'phone'=>'8655033306',
                    'username'=>'ad_login_name2'
            };
        User oUser2=(new SAMLJITHandler()).createUser(null, null,null,
        attributes2.get('email'),attributes2, assertion2);

        System.assertEquals(true,oUser2.Id!=null,'User Created Successfully');
    
        attributes2=new  Map<String, String>
            {
                    'givenname'=>'First Name Updated',
                    'surname'=>'LastName2',                                                                            
                    'emailaddress'=>'TestHAO2@zeppelin.com',                                                                         
                    'mobile'=>'8655033306',                                                                         
                    'phone'=>'8655033306',
                    'username'=>'ad_login_name2 updated'
            };
            (new SAMLJITHandler()).updateUser(oUser2.Id, null,null,null,
            attributes2.get('emailaddress'),attributes2, assertion2);  
        User updatedUser2=[select Id, FirstName, AD_Login_Name__c from user where Id=:oUser2.Id];   
        System.assertEquals(true,updatedUser2.FirstName==attributes2.get('givenname'),'User updated Successfully');

        // User 3
        Map<String, String> attributes3=new  Map<String, String>
            {
                    'givenname'=>'First Name',
                    'surname'=>'LastName3',                                                                            
                    'emailaddress'=>'TestHAO3@zeppelin.com',                                                                         
                    'mobile'=>'8655033306',                                                                         
                    'phone'=>'8655033306',
                    'username'=>'ad_login_name3'
            };
        User oUser3=(new SAMLJITHandler()).createUser(null, null,null,
        attributes3.get('email'),attributes3, assertion3);
        System.assertEquals(false,oUser3.Id!=null,'User Created Successfully');
        
        
        attributes3=new  Map<String, String>
            {
                    'givenname'=>'First Name Updated',
                    'surname'=>'LastName3',                                                                            
                    'emailaddress'=>'TestHAO3@zeppelin.com',                                                                         
                    'mobile'=>'8655033306',                                                                         
                    'phone'=>'8655033306',
                    'username'=>'ad_login_name3 updated'
            };
            (new SAMLJITHandler()).updateUser(oUser3.Id, null,null,null,
            attributes3.get('emailaddress'),attributes3, assertion3);  
        User updatedUser3=[select Id, FirstName, AD_Login_Name__c from user where Id=:oUser2.Id];   
        System.assertEquals(true,updatedUser3.FirstName==attributes3.get('givenname'),'User updated Successfully');        
    }  
}